<%-- Load Java libraries, Kinetic models & Identity --%>
<%@page pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<%@page import="java.util.*" %>
<%@page import="com.kineticdata.core.models.*" %>
<%@page import="com.kineticdata.core.web.bundles.Bundle" %>
<%@page import="com.kineticdata.core.web.bundles.BundleSubmissionComponent" %>
<%@page import="com.kineticdata.core.authentication.Identity" %>
<%@page import="org.slf4j.Logger" %>

<%-- Bundle Java libraries --%>
<%@page import="com.kineticdata.bundles.*" %>

<%-- Load tag libraries (JSTL) used in most bundles --%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@taglib prefix="app" uri="http://kineticdata.com/taglibs/core/app" %>
<%@taglib prefix="bundle" uri="http://kineticdata.com/taglibs/bundle" %>
<%@taglib prefix="json" uri="http://kineticdata.com/taglibs/json" %>

<%@include file="/WEB-INF/app/includes/task4/task4.jspf" %>

<%-- Get bundle, space, and kapp objects --%>
<%
    Bundle bundle = (Bundle)request.getAttribute("bundle"); 
    Space space = (Space)request.getAttribute("space");
    Kapp kapp = (Kapp)request.getAttribute("kapp");
    Identity identity = (Identity)request.getAttribute("identity");
%>

<%-- Load helper(s) --%>
<%
    request.setAttribute("json", new com.kineticdata.bundles.JsonHelper());
    request.setAttribute("text", new com.kineticdata.bundles.TextHelper());
    request.setAttribute("time", new com.kineticdata.bundles.TimeHelper());
%>

<%-- SetupHelper --%>
<%@include file="SetupHelper.jspf"%>
<%
    SetupHelper setupHelper = new SetupHelper()
        .addSetupAttribute("Task Server Url", 
            "Your Kinetic Task Server Url", 
            false)
        .addSetupAttribute("Task Source Name", 
            "The Kinetic Task Source Name", 
            false)
        .addSetupAttribute("Search Attribute", 
            "Specify which form attributes should be searchable. Keyword Attribute is always searchable and does not need to be spcified as a Search Attribute.", 
            false)
        .addSetupAttribute("Include in Global Search", 
            "Set if the Kapp should use and participate in global search.", 
            false); 
    request.setAttribute("SetupHelper", setupHelper);
%>

<%-- CategoryHelper --%>
<%@include file="CategoryHelper.jspf"%>
<%
    request.setAttribute("CategoryHelper", new CategoryHelper());
%>

<%-- FilehubHelper --%>
<%@include file="FilehubHelper.jspf"%>
<%
    // Add the "Filehub Url" setup attribute
    setupHelper
        .addSetupAttribute(
            "Filehub Url", 
            "The URL to the Kinetic Filehub application (https://acme.com/kinetic-filehub)", 
            request.getParameter("filestore") != null);
    // Initialize the filehub helper
    FilehubHelper filehubHelper = new FilehubHelper(kapp.getAttributeValue("Filehub Url"));
    
    // Add the "Example" filestore setup attributes
    setupHelper
        .addSetupAttribute(
            "Example Filestore Slug", 
            "The slug of the desired filestore configured in Kinetic Filehub.", 
            false)
        .addSetupAttribute(
            "Example Filestore Key", 
            "The key for an access key associated to the specified filestore.", 
            kapp.hasAttribute("Example Filestore Slug"))
        .addSetupAttribute(
            "Example Filestore Secret", 
            "The secret associated to the specified key.", 
            kapp.hasAttribute("Example Filestore Slug"));
    // Initialize the "Example" filestore
    if (kapp.hasAttribute("Example Filestore Slug")) {
        filehubHelper.addFilestore(
            kapp.getAttributeValue("Example Filestore Slug"),
            kapp.getAttributeValue("Example Filestore Key"),
            kapp.getAttributeValue("Example Filestore Secret"),
            new FilehubHelper.Authorizer() {
                @Override public boolean canAccess(HttpServletRequest request) {
                    return true;
                }
            },
            new FilehubHelper.PathBuilder() {
                @Override public String buildPath(HttpServletRequest request) {
                    //return request.getParameter("path");
                    String path = request.getParameter("form")+
                        "/"+request.getParameter("entry")+
                        "/"+request.getParameter("field");
                    if (request.getParameter("filename") != null) {
                        path += "/"+request.getParameter("filename");
                    }
                    return path;
                }
            }
        );
    }
%>

<%-- SearchHelper --%>
<%@include file="SearchHelper.jspf"%>
<%
    request.setAttribute("SearchHelper", new SearchHelper());
%>

<%-- SubmissionHelper --%>
<%@include file="SubmissionHelper.jspf"%>
<%
    request.setAttribute("SubmissionHelper", new SubmissionHelper(request));
%>